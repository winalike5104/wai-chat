{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport PhoneCallingScreen from \"./screens/PhoneCallingScreen\";\nimport ChatDetailScreen from \"./screens/ChatDetailScreen\";\nimport SelectUserScreen from \"./screens/SelectUserScreen\";\nvar Stake = createStackNavigator();\nvar globalScreenOptions = {\n  headerStyle: {\n    backgroundColor: \"#2c6bed\"\n  },\n  headerTitleStyle: {\n    color: \"white\"\n  },\n  headerTintColor: \"white\"\n};\nimport * as Notification from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\nimport searchBar from \"./screens/searchUser\";\nimport searchUser from \"./screens/searchUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  useEffect(function () {\n    Permissions.getAsync(Permissions.NOTIFICATIONS).then(function (statusObj) {\n      if (statusObj.status !== 'granted') {\n        return Permissions.askAsync(Permissions.NOTIFICATIONS);\n      }\n\n      return statusObj;\n    }).then(function (statusObj) {\n      if (statusObj.status !== 'granted') {\n        alert('Notifications will be unavailable now');\n        return;\n      }\n    });\n  }, []);\n  useEffect(function () {\n    var backgroundSubscription = Notification.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    var foregroundSubscription = Notification.addNotificationReceivedListener(function (notification) {\n      console.log(notification);\n    });\n    return function () {\n      backgroundSubscription.remove();\n      foregroundSubscription.remove();\n    };\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stake.Navigator, {\n      screenOptions: globalScreenOptions,\n      children: [_jsx(Stake.Screen, {\n        name: 'login',\n        component: LoginScreen\n      }), _jsx(Stake.Screen, {\n        name: 'home',\n        component: HomeScreen\n      }), _jsx(Stake.Screen, {\n        name: 'userList',\n        component: UserListScreen\n      }), _jsx(Stake.Screen, {\n        name: 'addChat',\n        component: AddChatScreen\n      }), _jsx(Stake.Screen, {\n        name: 'chat',\n        component: ChatScreen\n      }), _jsx(Stake.Screen, {\n        name: 'searchuser',\n        component: searchUser\n      }), _jsx(Stake.Screen, {\n        name: 'phonecall',\n        component: PhoneCallingScreen\n      }), _jsx(Stake.Screen, {\n        name: 'chatDetail',\n        component: ChatDetailScreen\n      }), _jsx(Stake.Screen, {\n        name: 'selectUser',\n        component: SelectUserScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/sanli/Desktop/backup/wai-chat-master(1)/App.js"],"names":["StatusBar","NavigationContainer","createStackNavigator","LoginScreen","HomeScreen","AddChatScreen","ChatScreen","UserListScreen","PhoneCallingScreen","ChatDetailScreen","SelectUserScreen","Stake","globalScreenOptions","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","Notification","Permissions","useEffect","useState","axios","SecureStore","searchBar","searchUser","App","getAsync","NOTIFICATIONS","then","statusObj","status","askAsync","alert","backgroundSubscription","addNotificationResponseReceivedListener","response","console","log","foregroundSubscription","addNotificationReceivedListener","notification","remove","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport {StyleSheet, Text, View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\n// import RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport PhoneCallingScreen from \"./screens/PhoneCallingScreen\";\nimport ChatDetailScreen from \"./screens/ChatDetailScreen\";\nimport SelectUserScreen from \"./screens/SelectUserScreen\";\n\n\nconst Stake = createStackNavigator();\nconst globalScreenOptions = {\n    headerStyle: {backgroundColor: \"#2c6bed\"},\n    headerTitleStyle: {color: \"white\"},\n    headerTintColor: \"white\",\n\n};\n\n\nimport * as Notification from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\nimport searchBar from \"./screens/searchUser\";\nimport searchUser from \"./screens/searchUser\";\n\n\nexport default function App() {\n    // const [userid, setUserID] = useState(\"\");\n    // const [messages, setMessages] = useState(\"\");\n    // const [hasNewMessage, setHasNewMessage] = useState(false);\n\n    useEffect(() => {\n        Permissions.getAsync(Permissions.NOTIFICATIONS)\n            .then((statusObj) => {\n                if (statusObj.status !== 'granted') {\n                    return Permissions.askAsync(Permissions.NOTIFICATIONS);\n                }\n                return statusObj;\n            }).then(statusObj => {\n            if (statusObj.status !== 'granted') {\n                alert('Notifications will be unavailable now');\n                return;\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        //When app is closed\n        const backgroundSubscription = Notification.addNotificationResponseReceivedListener(response => {\n            console.log(response);\n        });\n        //When the app is open\n        const foregroundSubscription = Notification.addNotificationReceivedListener(notification => {\n            console.log(notification);\n        });\n\n        return () => {\n            backgroundSubscription.remove();\n            foregroundSubscription.remove();\n        }\n    }, []);\n    //=======================================================\n\n\n\n    return (\n        <NavigationContainer>\n            <Stake.Navigator\n                screenOptions={globalScreenOptions}\n            >\n                <Stake.Screen\n                    name={'login'} component={LoginScreen}\n                />\n                {/*<Stake.Screen*/}\n                {/*    name={'register'} component={RegisterScreen}*/}\n                {/*/>*/}\n                <Stake.Screen\n                    name={'home'} component={HomeScreen}\n                />\n                <Stake.Screen\n                    name={'userList'} component={UserListScreen}\n                />\n                <Stake.Screen\n                    name={'addChat'} component={AddChatScreen}\n                />\n                <Stake.Screen\n                    name={'chat'} component={ChatScreen}\n                />\n                <Stake.Screen\n                    name={'searchuser'} component={searchUser}\n                />\n                <Stake.Screen\n                    name={'phonecall'} component={PhoneCallingScreen}\n                />\n                <Stake.Screen\n                    name={'chatDetail'} component={ChatDetailScreen}\n                />\n                <Stake.Screen\n                    name={'selectUser'} component={SelectUserScreen}\n                />\n            </Stake.Navigator>\n\n        </NavigationContainer>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}
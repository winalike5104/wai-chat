{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CustomListItem from \"../components/CustomListItem\";\nimport { Avatar } from \"react-native-elements\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios';\nimport { BASE_URL } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var token = route.params.token;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chats = _useState2[0],\n      setChats = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userid = _useState4[0],\n      setUserID = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      first_name = _useState6[0],\n      setFirst_name = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      last_name = _useState8[0],\n      setLast_name = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var getName = function getName(token1) {\n    return _regeneratorRuntime.async(function getName$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL + 'user/', {\n              headers: {\n                'Authorization': \"Token \" + token1\n              }\n            }).then(function (response) {\n              setUserID(response.data.id);\n              setFirst_name(response.data.first_name);\n              setLast_name(response.data.last_name);\n            }).catch(function (error) {\n              console.log(\"getName no token\");\n              console.log(error);\n              SecureStore.deleteItemAsync(\"myToken\");\n              navigation.navigate(\"login\");\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getRooms = function getRooms(token1) {\n    return _regeneratorRuntime.async(function getRooms$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL + 'api/getUserChatrooms/', {\n              headers: {\n                'Authorization': \"Token \" + token1\n              }\n            }).then(function (response) {\n              setChats(response.data.rooms);\n            }).catch(function (error) {\n              console.log(\"get rooms no token\");\n              console.log(error);\n              SecureStore.deleteItemAsync(\"myToken\");\n              navigation.navigate(\"login\");\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var id1, room;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(getName(token));\n\n            case 3:\n              id1 = _context3.sent;\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(getRooms(token));\n\n            case 6:\n              room = _context3.sent;\n\n              if (last_name === \"\" && chats.length === 0) {\n                setLoading(false);\n              } else {\n                setLoading(true);\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    })();\n  }, [last_name, chats]);\n\n  function removeNotificationsToBackend(token) {\n    return _regeneratorRuntime.async(function removeNotificationsToBackend$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"remove:\" + token);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(BASE_URL + 'api/removeNotificationToken/', {\n              token: token\n            }).then(function (response) {\n              return console.log(response);\n            }).catch(function (error) {\n              return console.log(error);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var signOutUser = function signOutUser() {\n    return _regeneratorRuntime.async(function signOutUser$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(BASE_URL + 'logout/', token, {\n              headers: {\n                'Authorization': \"Token \" + token\n              }\n            }).then(function _callee2(response) {\n              return _regeneratorRuntime.async(function _callee2$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _regeneratorRuntime.awrap(removeNotificationsToBackend(token));\n\n                    case 2:\n                      SecureStore.deleteItemAsync(\"myToken\");\n                      navigation.navigate(\"login\");\n\n                    case 4:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              return alert(\"Logout Failed\");\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openUserList = function openUserList(token1, userid) {\n    navigation.navigate(\"userList\", {\n      token1: token,\n      userID: userid\n    });\n  };\n\n  var addChat = function addChat(token1, userid) {\n    navigation.navigate(\"addChat\", {\n      token1: token,\n      userID: userid\n    });\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Chats\",\n      headerStyle: {\n        backgroundColor: \"#3B5F41\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"black\",\n      headerLeft: function headerLeft() {\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            onPress: signOutUser,\n            children: _jsx(Avatar, {\n              rounded: true,\n              source: require(\"../assets/young-user-icon.jpg\"),\n              size: 40\n            })\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20\n          },\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            children: _jsx(AntDesign, {\n              name: \"camerao\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            onPress: function onPress() {\n              addChat(token, userid);\n            },\n            children: _jsx(SimpleLineIcons, {\n              name: \"pencil\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        });\n      }\n    });\n  }, [last_name, chats]);\n\n  var enterChat = function enterChat(chatID, chatName, token, userid, phoneNumber) {\n    navigation.navigate(\"chat\", {\n      chatID: chatID,\n      chatName: chatName,\n      token: token,\n      userID: userid,\n      phoneNumber: phoneNumber\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(ScrollView, {\n      style: styles.container,\n      children: loading ? [_jsx(View, {\n        style: styles.topBar,\n        children: _jsxs(Text, {\n          style: {\n            marginLeft: 15,\n            color: '#696969',\n            fontSize: 16\n          },\n          children: [\"Welcome back \", first_name]\n        })\n      }), chats.map(function (chat) {\n        return _jsx(CustomListItem, {\n          chatID: chat.id,\n          chatName: chat.name,\n          token: token,\n          userid: userid,\n          enterChat: enterChat\n        }, chat.id);\n      })] : _jsx(Text, {\n        children: \"Loading\"\n      })\n    }), _jsxs(View, {\n      style: styles.bottomBar,\n      children: [_jsx(View, {\n        style: styles.BottomMenu1,\n        children: _jsx(TouchableOpacity, {\n          activeOpacity: 0.5,\n          style: styles.button,\n          onPress: function onPress() {\n            HomeScreen;\n          },\n          children: _jsx(SimpleLineIcons, {\n            name: \"bubble\",\n            size: 30,\n            color: \"#66A96B\",\n            marginTop: 10\n          })\n        })\n      }), _jsx(View, {\n        style: styles.BottomMenu1,\n        children: _jsx(TouchableOpacity, {\n          activeOpacity: 0.5,\n          style: styles.button,\n          onPress: function onPress() {\n            navigation.navigate(\"searchuser\", {\n              token1: token,\n              userID: userid\n            });\n          },\n          children: _jsx(SimpleLineIcons, {\n            name: \"people\",\n            size: 30,\n            color: \"#66A96B\",\n            marginTop: 10\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%'\n  },\n  topBar: {\n    backgroundColor: '#D3D3D3',\n    borderWidth: 1,\n    borderColor: '#696969',\n    width: '100%',\n    height: '10%',\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"flex-start\"\n  },\n  bottomBar: {\n    width: '100%',\n    height: '25%',\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  BottomMenu1: {\n    backgroundColor: '#DDDDDD',\n    width: '50%',\n    height: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/sanli/Desktop/backup/wai-chat-master(1)/screens/HomeScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","CustomListItem","Avatar","AntDesign","SimpleLineIcons","SecureStore","axios","BASE_URL","HomeScreen","route","navigation","token","params","chats","setChats","userid","setUserID","first_name","setFirst_name","last_name","setLast_name","loading","setLoading","getName","token1","get","headers","then","response","data","id","catch","error","console","log","deleteItemAsync","navigate","getRooms","rooms","id1","room","length","removeNotificationsToBackend","post","signOutUser","err","alert","openUserList","userID","addChat","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","require","headerRight","flexDirection","justifyContent","width","marginRight","enterChat","chatID","chatName","phoneNumber","styles","container","topBar","fontSize","map","chat","name","bottomBar","BottomMenu1","button","StyleSheet","create","height","borderWidth","borderColor","flexWrap","alignItems","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,eAA1B,EAA2CC,QAA3C,QAA0D,OAA1D;;;;;;;AAGA,OAAOC,cAAP;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,SAAR,EAAmBC,eAAnB,QAAyC,oBAAzC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAAQC,QAAR;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACxC,MAAOC,KAAP,GAAgBF,KAAK,CAACG,MAAtB,CAAOD,KAAP;;AACA,kBAA0BX,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAA4Bd,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoChB,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOiB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAkClB,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOmB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8BpB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOqB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACNlB,KAAK,CAACmB,GAAN,CAAUlB,QAAQ,GAAG,OAArB,EAA8B;AAChCmB,cAAAA,OAAO,EAAE;AACL,iCAAiB,WAAWF;AADvB;AADuB,aAA9B,EAIHG,IAJG,CAIE,UAAUC,QAAV,EAAoB;AAExBZ,cAAAA,SAAS,CAACY,QAAQ,CAACC,IAAT,CAAcC,EAAf,CAAT;AACAZ,cAAAA,aAAa,CAACU,QAAQ,CAACC,IAAT,CAAcZ,UAAf,CAAb;AACAG,cAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcV,SAAf,CAAZ;AACH,aATK,EASHY,KATG,CASG,UAAUC,KAAV,EAAiB;AAEtBC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA3B,cAAAA,WAAW,CAAC8B,eAAZ,CAA4B,SAA5B;AACAzB,cAAAA,UAAU,CAAC0B,QAAX,CAAoB,OAApB;AACH,aAfK,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAkBA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOb,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEPlB,KAAK,CAACmB,GAAN,CAAUlB,QAAQ,GAAG,uBAArB,EAA8C;AAChDmB,cAAAA,OAAO,EAAE;AACL,iCAAiB,WAAWF;AADvB;AADuC,aAA9C,EAIHG,IAJG,CAIE,UAAUC,QAAV,EAAoB;AAGxBd,cAAAA,QAAQ,CAACc,QAAQ,CAACC,IAAT,CAAcS,KAAf,CAAR;AACH,aARK,EAQHP,KARG,CAQG,UAAUC,KAAV,EAAiB;AAEtBC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA3B,cAAAA,WAAW,CAAC8B,eAAZ,CAA4B,SAA5B;AACAzB,cAAAA,UAAU,CAAC0B,QAAX,CAAoB,OAApB;AAEH,aAfK,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAoBAtC,EAAAA,SAAS,CAAC,YAAM;AAEZ,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAIyByB,OAAO,CAACZ,KAAD,CAJhC;;AAAA;AAIa4B,cAAAA,GAJb;AAAA;AAAA,+CAK0BF,QAAQ,CAAC1B,KAAD,CALlC;;AAAA;AAKa6B,cAAAA,IALb;;AAOO,kBAAIrB,SAAS,KAAK,EAAd,IAAoBN,KAAK,CAAC4B,MAAN,KAAiB,CAAzC,EAA4C;AACxCnB,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACH,eAFD,MAEO;AACHA,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAXR;AAAA;;AAAA;AAAA;AAAA;AAaOW,cAAAA,OAAO,CAACC,GAAR;;AAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAmBH,GArBQ,EAqBN,CAACf,SAAD,EAAYN,KAAZ,CArBM,CAAT;;AAuBA,WAAe6B,4BAAf,CAA4C/B,KAA5C;AAAA;AAAA;AAAA;AAAA;AACIsB,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAYvB,KAAxB;AADJ;AAAA,6CAEUL,KAAK,CAACqC,IAAN,CAAWpC,QAAQ,GAAG,8BAAtB,EAAsD;AACxDI,cAAAA,KAAK,EAAEA;AADiD,aAAtD,EAEHgB,IAFG,CAEE,UAAAC,QAAQ;AAAA,qBAAIK,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAAJ;AAAA,aAFV,EAEqCG,KAFrC,CAE2C,UAAAC,KAAK;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,aAFhD,CAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,MAAMY,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVtC,KAAK,CAACqC,IAAN,CAAWpC,QAAQ,GAAG,SAAtB,EAAiCI,KAAjC,EAAwC;AAC1Ce,cAAAA,OAAO,EAAE;AACL,iCAAiB,WAAWf;AADvB;AADiC,aAAxC,EAIHgB,IAJG,CAIE,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDACEc,4BAA4B,CAAC/B,KAAD,CAD9B;;AAAA;AAEJN,sBAAAA,WAAW,CAAC8B,eAAZ,CAA4B,SAA5B;AACAzB,sBAAAA,UAAU,CAAC0B,QAAX,CAAoB,OAApB;;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAQHL,KARG,CAQG,UAAAc,GAAG;AAAA,qBAAIC,KAAK,CAAC,eAAD,CAAT;AAAA,aARN,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAcA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACvB,MAAD,EAAST,MAAT,EAAoB;AACrCL,IAAAA,UAAU,CAAC0B,QAAX,CAAoB,UAApB,EAAgC;AAC5BZ,MAAAA,MAAM,EAAEb,KADoB;AAE5BqC,MAAAA,MAAM,EAAEjC;AAFoB,KAAhC;AAKH,GAND;;AAQA,MAAMkC,OAAO,GAAG,SAAVA,OAAU,CAACzB,MAAD,EAAST,MAAT,EAAoB;AAChCL,IAAAA,UAAU,CAAC0B,QAAX,CAAoB,SAApB,EAA+B;AAC3BZ,MAAAA,MAAM,EAAEb,KADmB;AAE3BqC,MAAAA,MAAM,EAAEjC;AAFmB,KAA/B;AAKH,GAND;;AAQAhB,EAAAA,eAAe,CAAC,YAAM;AAClBW,IAAAA,UAAU,CAACwC,UAAX,CAAsB;AAClBC,MAAAA,KAAK,EAAE,OADW;AAElBC,MAAAA,WAAW,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAFK;AAGlBC,MAAAA,gBAAgB,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAHA;AAIlBC,MAAAA,eAAe,EAAE,OAJC;AAKlBC,MAAAA,UAAU,EAAE;AAAA,eACR,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAAb;AAAA,oBACI,KAAC,gBAAD;AAAkB,YAAA,aAAa,EAAE,GAAjC;AAAsC,YAAA,OAAO,EAAEd,WAA/C;AAAA,sBACI,KAAC,MAAD;AACI,cAAA,OAAO,MADX;AAEI,cAAA,MAAM,EAAEe,OAAO,iCAFnB;AAEsD,cAAA,IAAI,EAAE;AAF5D;AADJ;AADJ,UADQ;AAAA,OALM;AAelBC,MAAAA,WAAW,EAAE;AAAA,eACT,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACTC,YAAAA,aAAa,EAAE,KADN;AAETC,YAAAA,cAAc,EAAE,eAFP;AAGTC,YAAAA,KAAK,EAAE,EAHE;AAITC,YAAAA,WAAW,EAAE;AAJJ,WAAb;AAAA,qBAOI,KAAC,gBAAD;AAAkB,YAAA,aAAa,EAAE,GAAjC;AAAA,sBACI,KAAC,SAAD;AAAW,cAAA,IAAI,EAAE,SAAjB;AAA4B,cAAA,IAAI,EAAE,EAAlC;AAAsC,cAAA,KAAK,EAAE;AAA7C;AADJ,YAPJ,EAUI,KAAC,gBAAD;AACI,YAAA,aAAa,EAAE,GADnB;AAGI,YAAA,OAAO,EAAE,mBAAM;AACXf,cAAAA,OAAO,CAACtC,KAAD,EAAQI,MAAR,CAAP;AACH,aALL;AAAA,sBAOI,KAAC,eAAD;AAAiB,cAAA,IAAI,EAAE,QAAvB;AAAiC,cAAA,IAAI,EAAE,EAAvC;AAA2C,cAAA,KAAK,EAAE;AAAlD;AAPJ,YAVJ;AAAA,UADS;AAAA;AAfK,KAAtB;AAuCH,GAxCc,EAwCZ,CAACI,SAAD,EAAYN,KAAZ,CAxCY,CAAf;;AA2CA,MAAMoD,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,QAAT,EAAmBxD,KAAnB,EAA0BI,MAA1B,EAAkCqD,WAAlC,EAAkD;AAChE1D,IAAAA,UAAU,CAAC0B,QAAX,CAAoB,MAApB,EAA4B;AACxB8B,MAAAA,MAAM,EAAEA,MADgB;AAExBC,MAAAA,QAAQ,EAAEA,QAFc;AAGxBxD,MAAAA,KAAK,EAAEA,KAHiB;AAIxBqC,MAAAA,MAAM,EAAEjC,MAJgB;AAKxBqD,MAAAA,WAAW,EAAEA;AALW,KAA5B;AAOH,GARD;;AAUA,SAGI,MAAC,YAAD;AAAA,eAEI,KAAC,UAAD;AAAY,MAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA,gBACKjD,OAAO,GACJ,CAAC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEgD,MAAM,CAACE,MAApB;AAAA,kBACG,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACTb,YAAAA,UAAU,EAAE,EADH;AACOH,YAAAA,KAAK,EAAE,SADd;AACyBiB,YAAAA,QAAQ,EAAE;AADnC,WAAb;AAAA,sCAEiBvD,UAFjB;AAAA;AADH,QAAD,EAKIJ,KAAK,CAAC4D,GAAN,CAAU,UAACC,IAAD;AAAA,eACN,KAAC,cAAD;AAEI,UAAA,MAAM,EAAEA,IAAI,CAAC5C,EAFjB;AAGI,UAAA,QAAQ,EAAE4C,IAAI,CAACC,IAHnB;AAII,UAAA,KAAK,EAAEhE,KAJX;AAKI,UAAA,MAAM,EAAEI,MALZ;AAMI,UAAA,SAAS,EAAEkD;AANf,WACSS,IAAI,CAAC5C,EADd,CADM;AAAA,OAAV,CALJ,CADI,GAiBJ,KAAC,IAAD;AAAA;AAAA;AAlBR,MAFJ,EAuBI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEuC,MAAM,CAACO,SAApB;AAAA,iBACI,KAAC,IAAD;AACI,QAAA,KAAK,EAAEP,MAAM,CAACQ,WADlB;AAAA,kBAEI,KAAC,gBAAD;AACI,UAAA,aAAa,EAAE,GADnB;AAEI,UAAA,KAAK,EAAER,MAAM,CAACS,MAFlB;AAGI,UAAA,OAAO,EAAE,mBAAM;AACXtE,YAAAA,UAAU;AACb,WALL;AAAA,oBAOI,KAAC,eAAD;AAAiB,YAAA,IAAI,EAAE,QAAvB;AAAiC,YAAA,IAAI,EAAE,EAAvC;AAA2C,YAAA,KAAK,EAAE,SAAlD;AAA6D,YAAA,SAAS,EAAE;AAAxE;AAPJ;AAFJ,QADJ,EAaI,KAAC,IAAD;AACI,QAAA,KAAK,EAAE6D,MAAM,CAACQ,WADlB;AAAA,kBAEI,KAAC,gBAAD;AACI,UAAA,aAAa,EAAE,GADnB;AAEI,UAAA,KAAK,EAAER,MAAM,CAACS,MAFlB;AAMI,UAAA,OAAO,EAAE,mBAAM;AACXpE,YAAAA,UAAU,CAAC0B,QAAX,CAAoB,YAApB,EAAkC;AAC9BZ,cAAAA,MAAM,EAAEb,KADsB;AAE9BqC,cAAAA,MAAM,EAAEjC;AAFsB,aAAlC;AAIH,WAXL;AAAA,oBAaI,KAAC,eAAD;AAAiB,YAAA,IAAI,EAAE,QAAvB;AAAiC,YAAA,IAAI,EAAE,EAAvC;AAA2C,YAAA,KAAK,EAAE,SAAlD;AAA6D,YAAA,SAAS,EAAE;AAAxE;AAbJ;AAFJ,QAbJ;AAAA,MAvBJ;AAAA,IAHJ;AAiEH,CAjOD;;AAmOA,eAAeP,UAAf;AAEA,IAAM6D,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AAEPW,IAAAA,MAAM,EAAE;AAFD,GADkB;AAK7BV,EAAAA,MAAM,EAAE;AACJlB,IAAAA,eAAe,EAAE,SADb;AAEJ6B,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,WAAW,EAAE,SAHT;AAIJpB,IAAAA,KAAK,EAAE,MAJH;AAKJkB,IAAAA,MAAM,EAAE,KALJ;AAMJpB,IAAAA,aAAa,EAAE,KANX;AAOJuB,IAAAA,QAAQ,EAAE,MAPN;AAQJC,IAAAA,UAAU,EAAE;AARR,GALqB;AAgB7BT,EAAAA,SAAS,EAAE;AAEPb,IAAAA,KAAK,EAAE,MAFA;AAGPkB,IAAAA,MAAM,EAAE,KAHD;AAIPpB,IAAAA,aAAa,EAAE,KAJR;AAKPuB,IAAAA,QAAQ,EAAE;AALH,GAhBkB;AAwB7BN,EAAAA,MAAM,EAAE;AACJO,IAAAA,UAAU,EAAE,QADR;AAEJvB,IAAAA,cAAc,EAAE,cAFZ;AAGJwB,IAAAA,OAAO,EAAE;AAHL,GAxBqB;AA8B7BT,EAAAA,WAAW,EAAE;AACTxB,IAAAA,eAAe,EAAE,SADR;AAETU,IAAAA,KAAK,EAAE,KAFE;AAGTkB,IAAAA,MAAM,EAAE,MAHC;AAITI,IAAAA,UAAU,EAAE;AAJH;AA9BgB,CAAlB,CAAf","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from 'react';\r\n\r\nimport {SafeAreaView, ScrollView, Text, TouchableOpacity, View, StyleSheet} from 'react-native';\r\nimport CustomListItem from \"../components/CustomListItem\";\r\nimport {Avatar} from \"react-native-elements\";\r\nimport {AntDesign, SimpleLineIcons} from \"@expo/vector-icons\";\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport axios from 'axios';\r\n\r\n// const BASE_URL = 'https://wai-chat-api.herokuapp.com/';\r\nimport {BASE_URL} from \"../constants\";\r\n\r\nconst HomeScreen = ({route, navigation}) => {\r\n    const {token} = route.params;\r\n    const [chats, setChats] = useState([]);\r\n    // const [token, setToken] = useState(\"\");\r\n    const [userid, setUserID] = useState(\"\");\r\n    const [first_name, setFirst_name] = useState(\"\");\r\n    const [last_name, setLast_name] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getName = async (token1) => {\r\n        await axios.get(BASE_URL + 'user/', {\r\n            headers: {\r\n                'Authorization': `Token ` + token1\r\n            }\r\n        }).then(function (response) {\r\n            // handle success\r\n            setUserID(response.data.id);\r\n            setFirst_name(response.data.first_name);\r\n            setLast_name(response.data.last_name);\r\n        }).catch(function (error) {\r\n            // handle error\r\n            console.log(\"getName no token\");\r\n            console.log(error);\r\n            SecureStore.deleteItemAsync(\"myToken\");\r\n            navigation.navigate(\"login\");\r\n        });\r\n    }\r\n    const getRooms = async (token1) => {\r\n        //console.log(token1);\r\n        await axios.get(BASE_URL + 'api/getUserChatrooms/', {\r\n            headers: {\r\n                'Authorization': `Token ` + token1\r\n            }\r\n        }).then(function (response) {\r\n            // handle success\r\n            // console.log(\"chat rooms:\"+response.data[0].id);\r\n            setChats(response.data.rooms);\r\n        }).catch(function (error) {\r\n            // handle error\r\n            console.log(\"get rooms no token\");\r\n            console.log(error);\r\n            SecureStore.deleteItemAsync(\"myToken\");\r\n            navigation.navigate(\"login\");\r\n            \r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Add inner async function\r\n        (async () => {\r\n            // console.log(\"token:\"+token);\r\n            try {\r\n                // const token1 = await getMyToken();\r\n                const id1 = await getName(token);\r\n                const room = await getRooms(token);\r\n                // console.log(\"lastname: \"+last_name);\r\n                if (last_name === \"\" && chats.length === 0) {\r\n                    setLoading(false);\r\n                } else {\r\n                    setLoading(true);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })()\r\n\r\n        // Call function immediately\r\n        // fetchName().then(r => console.log(\"r:\"+r));\r\n    }, [last_name, chats])\r\n\r\n    async function removeNotificationsToBackend(token) {\r\n        console.log(\"remove:\" + token);\r\n        await axios.post(BASE_URL + 'api/removeNotificationToken/', {\r\n            token: token,\r\n        }).then(response => console.log(response)).catch(error => console.log(error));\r\n    }\r\n\r\n    const signOutUser = async () => {\r\n        await axios.post(BASE_URL + 'logout/', token, {\r\n            headers: {\r\n                'Authorization': `Token ` + token\r\n            }\r\n        }).then(async (response) => {\r\n            await removeNotificationsToBackend(token);\r\n            SecureStore.deleteItemAsync(\"myToken\");\r\n            navigation.navigate(\"login\");\r\n        }).catch(err => alert(\"Logout Failed\"))\r\n\r\n    }\r\n\r\n\r\n    const openUserList = (token1, userid) => {\r\n        navigation.navigate(\"userList\", {\r\n            token1: token,\r\n            userID: userid,\r\n        })\r\n        //console.log(token)\r\n    }\r\n\r\n    const addChat = (token1, userid) => {\r\n        navigation.navigate(\"addChat\", {\r\n            token1: token,\r\n            userID: userid,\r\n        })\r\n        //console.log(token)\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Chats\",\r\n            headerStyle: {backgroundColor: \"#3B5F41\"},\r\n            headerTitleStyle: {color: \"white\"},\r\n            headerTintColor: \"black\",\r\n            headerLeft: () => (\r\n                <View style={{marginLeft: 20}}>\r\n                    <TouchableOpacity activeOpacity={0.5} onPress={signOutUser}>\r\n                        <Avatar\r\n                            rounded\r\n                            source={require(\"../assets/young-user-icon.jpg\")} size={40}\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <View style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: 80,\r\n                    marginRight: 20,\r\n                }}\r\n                >\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <AntDesign name={\"camerao\"} size={24} color={\"white\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.5}\r\n                        // onPress={()=>navigation.navigate(\"addChat\")}\r\n                        onPress={() => {\r\n                            addChat(token, userid)\r\n                        }}\r\n                    >\r\n                        <SimpleLineIcons name={\"pencil\"} size={24} color={\"white\"}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n\r\n        });\r\n    }, [last_name, chats]);\r\n\r\n\r\n    const enterChat = (chatID, chatName, token, userid, phoneNumber) => {\r\n        navigation.navigate(\"chat\", {\r\n            chatID: chatID,\r\n            chatName: chatName,\r\n            token: token,\r\n            userID: userid,\r\n            phoneNumber: phoneNumber,\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <SafeAreaView>\r\n\r\n            <ScrollView style={styles.container}>\r\n                {loading ?\r\n                    [<View style={styles.topBar}>\r\n                        <Text style={{\r\n                            marginLeft: 15, color: '#696969', fontSize: 16,\r\n                        }}>Welcome back {first_name}</Text>\r\n                    </View>,\r\n                        chats.map((chat) => (\r\n                            <CustomListItem\r\n                                key={chat.id}\r\n                                chatID={chat.id}\r\n                                chatName={chat.name}\r\n                                token={token}\r\n                                userid={userid}\r\n                                enterChat={enterChat}\r\n                            />\r\n                        ))]\r\n                    :\r\n                    <Text>Loading</Text>\r\n                }\r\n            </ScrollView>\r\n            <View style={styles.bottomBar}>\r\n                <View\r\n                    style={styles.BottomMenu1}>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.5}\r\n                        style={styles.button}\r\n                        onPress={() => {\r\n                            HomeScreen\r\n                        }}\r\n                    >\r\n                        <SimpleLineIcons name={\"bubble\"} size={30} color={\"#66A96B\"} marginTop={10}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View\r\n                    style={styles.BottomMenu1}>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.5}\r\n                        style={styles.button}\r\n                        // onPress={() => {\r\n                        //     openUserList(token, userid)\r\n                        // }}\r\n                        onPress={() => {\r\n                            navigation.navigate(\"searchuser\", {\r\n                                token1: token,\r\n                                userID: userid,\r\n                            })\r\n                        }}\r\n                    >\r\n                        <SimpleLineIcons name={\"people\"} size={30} color={\"#66A96B\"} marginTop={10}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n            </View>\r\n\r\n\r\n        </SafeAreaView>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n        height: '100%',\r\n    },\r\n    topBar: {\r\n        backgroundColor: '#D3D3D3',\r\n        borderWidth: 1,\r\n        borderColor: '#696969',\r\n        width: '100%',\r\n        height: '10%',\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n\r\n    bottomBar: {\r\n        // backgroundColor: 'yellow',\r\n        width: '100%',\r\n        height: '25%',\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n\r\n    },\r\n    button: {\r\n        alignItems: \"center\",\r\n        justifyContent: 'space-around',\r\n        padding: 10\r\n    },\r\n\r\n    BottomMenu1: {\r\n        backgroundColor: '#DDDDDD',\r\n        width: '50%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}
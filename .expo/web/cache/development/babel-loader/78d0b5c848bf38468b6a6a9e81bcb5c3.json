{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { BASE_URL } from \"../constants\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Avatar, ListItem } from \"react-native-elements\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Audio } from 'expo-av';\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBKutAIM8JNqz5vRhOqNEcseptvDOk7Kpw\",\n  authDomain: \"entarome-15d8a.firebaseapp.com\",\n  projectId: \"entarome-15d8a\",\n  storageBucket: \"entarome-15d8a.appspot.com\",\n  messagingSenderId: \"779364504573\",\n  appId: \"1:779364504573:web:4c76e66828cfbcc8b2ff94\",\n  measurementId: \"G-E8LDCESXK3\"\n};\nvar firebaseApp = initializeApp(firebaseConfig);\nvar storage = getStorage(firebaseApp);\nvar scrollView;\n\nvar ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _route$params = route.params,\n      chatID = _route$params.chatID,\n      chatName = _route$params.chatName,\n      token = _route$params.token,\n      userID = _route$params.userID,\n      phoneNumber = _route$params.phoneNumber;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasPhoneNumber = _useState8[0],\n      sethasPhoneNumber = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      recording = _useState10[0],\n      setRecording = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isRecording = _useState12[0],\n      setIsRecording = _useState12[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sound = _React$useState2[0],\n      setSound = _React$useState2[1];\n\n  var getMessages = function getMessages(token1) {\n    return _regeneratorRuntime.async(function getMessages$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL + 'api/messagebyroom/?room=' + chatID, {\n              headers: {\n                'Authorization': \"Token \" + token1\n              }\n            }).then(function (response) {\n              setMessages(response.data);\n            }).catch(function (error) {\n              console.log(\"no token\");\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var sentMessageToReader = function sentMessageToReader(messageID) {\n    return _regeneratorRuntime.async(function sentMessageToReader$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            axios.get(BASE_URL + 'api/chatroom/' + chatID, {\n              headers: {\n                'Authorization': \"Token \" + token\n              }\n            }).then(function _callee(response) {\n              var chatters, i, chatter;\n              return _regeneratorRuntime.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      chatters = response.data.chatters;\n                      i = 0;\n\n                    case 2:\n                      if (!(i < chatters.length)) {\n                        _context2.next = 11;\n                        break;\n                      }\n\n                      chatter = chatters[i];\n\n                      if (!(chatter != userID)) {\n                        _context2.next = 8;\n                        break;\n                      }\n\n                      console.log(chatter);\n                      _context2.next = 8;\n                      return _regeneratorRuntime.awrap(setToUnread(chatter, messageID));\n\n                    case 8:\n                      i = i + 1;\n                      _context2.next = 2;\n                      break;\n\n                    case 11:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(\"no token\");\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var sentNotification = function sentNotification(chatterID, messageID) {\n    return _regeneratorRuntime.async(function sentNotification$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            axios.post(BASE_URL + 'api/sendNotification/', {\n              \"userID\": chatterID,\n              \"messageID\": messageID\n            }).then(function _callee2(response) {\n              return _regeneratorRuntime.async(function _callee2$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      console.log(\"set success\");\n\n                    case 1:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              return console.log(\"sent failed\");\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setToUnread = function setToUnread(chatterID, messageID) {\n    return _regeneratorRuntime.async(function setToUnread$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(sentNotification(chatterID, messageID));\n\n          case 2:\n            axios.post(BASE_URL + 'api/messagereader/', {\n              \"read\": false,\n              \"message\": messageID,\n              \"reader\": chatterID,\n              \"room\": chatID\n            }).then(function _callee3(response) {\n              return _regeneratorRuntime.async(function _callee3$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      console.log(\"set success\");\n\n                    case 1:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              return alert(\"set failed\");\n            });\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setToRead = function setToRead(unReadMessageID, token1) {\n    var url;\n    return _regeneratorRuntime.async(function setToRead$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            url = BASE_URL + \"api/messagereader/\" + unReadMessageID + \"/\";\n            console.log(url);\n            axios.patch(url, {\n              \"read\": true\n            }, {\n              headers: {\n                'Authorization': \"Token \" + token1\n              }\n            }).then(function (r) {\n              return console.log(r.data);\n            }).catch(function (error) {\n              return console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clearUnread = function clearUnread(chatID, userid, token1) {\n    return _regeneratorRuntime.async(function clearUnread$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL + 'api/messagereader/?read=false&reader=' + userid + '&room=' + chatID, {\n              headers: {\n                'Authorization': \"Token \" + token1\n              }\n            }).then(function (response) {\n              var unReadMessages = response.data;\n              var i = 0;\n\n              while (i < unReadMessages.length) {\n                var unReadMessageID = unReadMessages[i].id;\n                setToRead(unReadMessageID, token1);\n                i = i + 1;\n              }\n            }).catch(function (error) {\n              console.log(\"no token\");\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (phoneNumber !== \"\") {\n      sethasPhoneNumber(true);\n    }\n\n    (function _callee4() {\n      var ms, ms1;\n      return _regeneratorRuntime.async(function _callee4$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              try {\n                ms = getMessages(token);\n                ms1 = clearUnread(chatID, userID, token);\n\n                if (messages === \"\") {\n                  setLoading(false);\n                } else {\n                  setLoading(true);\n                  console.log(chatID);\n                }\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [messages, chatID]);\n\n  var phonecall = function phonecall() {\n    Linking.openURL('tel:' + phoneNumber);\n  };\n\n  var chatDetail = function chatDetail() {\n    navigation.navigate(\"chatDetail\", {\n      chatID: chatID,\n      chatName: chatName,\n      token: token,\n      userID: userID,\n      phoneNumber: phoneNumber\n    });\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerStyle: {\n        backgroundColor: \"#3B5F41\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"black\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: function headerTitle() {\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(Avatar, {\n            rounded: true,\n            source: require(\"../assets/young-user-icon.jpg\")\n          }), _jsx(Text, {\n            style: {\n              color: \"white\",\n              marginLeft: 10,\n              fontWeight: \"700\"\n            },\n            children: chatName\n          })]\n        });\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginLeft: 10\n          },\n          onPress: navigation.goBack,\n          children: _jsx(AntDesign, {\n            name: \"arrowleft\",\n            size: 24,\n            color: 'white'\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20\n          },\n          children: [_jsx(TouchableOpacity, {\n            children: _jsx(FontAwesome, {\n              name: \"video-camera\",\n              size: 24,\n              color: \"white\"\n            })\n          }), hasPhoneNumber ? _jsx(TouchableOpacity, {\n            onPress: phonecall,\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: \"white\"\n            })\n          }) : null, _jsx(TouchableOpacity, {\n            onPress: chatDetail,\n            children: _jsx(Ionicons, {\n              name: \"ellipsis-horizontal-outline\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        });\n      }\n    });\n  }, [messages]);\n\n  var sendMessage = function sendMessage() {\n    Keyboard.dismiss();\n\n    if (input === \"\") {\n      alert(\"Please enter a message\");\n    } else {\n      axios.post(BASE_URL + 'api/createmessage/', {\n        \"content\": input,\n        \"type\": \"text\",\n        \"sender\": userID,\n        \"room\": chatID\n      }, {\n        headers: {\n          'Authorization': \"Token \" + token\n        }\n      }).then(function _callee5(response) {\n        return _regeneratorRuntime.async(function _callee5$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                console.log(response.data);\n                _context11.next = 3;\n                return _regeneratorRuntime.awrap(sentMessageToReader(response.data.id).then(function (r) {\n                  return console.log(r);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }).catch(function (err) {\n        return alert(\"Send Failed\");\n      });\n    }\n\n    setInput('');\n  };\n\n  var getBlobFroUri = function getBlobFroUri(uri) {\n    var blob;\n    return _regeneratorRuntime.async(function getBlobFroUri$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function (e) {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", uri, true);\n              xhr.send(null);\n            }));\n\n          case 2:\n            blob = _context12.sent;\n            return _context12.abrupt(\"return\", blob);\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clickRecord = function clickRecord() {\n    var isr;\n    return _regeneratorRuntime.async(function clickRecord$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            isr = !isRecording;\n            setIsRecording(isr);\n\n            if (isr) {\n              startRecording();\n            } else {\n              stopRecording();\n            }\n\n          case 3:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function playSound(url) {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playSound$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            console.log('Loading Sound');\n            _context14.next = 3;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync({\n              uri: url\n            }));\n\n          case 3:\n            _await$Audio$Sound$cr = _context14.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            console.log('Playing Sound');\n            _context14.next = 9;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var startRecording = function startRecording() {\n    var _await$Audio$Recordin, _recording;\n\n    return _regeneratorRuntime.async(function startRecording$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            console.log('Requesting permissions..');\n            _context15.next = 4;\n            return _regeneratorRuntime.awrap(Audio.requestPermissionsAsync());\n\n          case 4:\n            _context15.next = 6;\n            return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n              allowsRecordingIOS: true,\n              playsInSilentModeIOS: true\n            }));\n\n          case 6:\n            console.log('Starting recording..');\n            _context15.next = 9;\n            return _regeneratorRuntime.awrap(Audio.Recording.createAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY));\n\n          case 9:\n            _await$Audio$Recordin = _context15.sent;\n            _recording = _await$Audio$Recordin.recording;\n            setRecording(_recording);\n            console.log('Recording started');\n            _context15.next = 18;\n            break;\n\n          case 15:\n            _context15.prev = 15;\n            _context15.t0 = _context15[\"catch\"](0);\n            console.error('Failed to start recording', _context15.t0);\n\n          case 18:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var stopRecording = function stopRecording() {\n    var uri, fileBlob, filName, storageRef, metadata;\n    return _regeneratorRuntime.async(function stopRecording$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            console.log('Stopping recording..');\n            setRecording(undefined);\n            _context17.next = 4;\n            return _regeneratorRuntime.awrap(recording.stopAndUnloadAsync());\n\n          case 4:\n            uri = recording.getURI();\n            console.log('Recording stopped and stored at', uri);\n            _context17.next = 8;\n            return _regeneratorRuntime.awrap(getBlobFroUri(uri));\n\n          case 8:\n            fileBlob = _context17.sent;\n            filName = \"audio-\" + new Date().getTime();\n            storageRef = ref(storage, \"\" + filName);\n            metadata = {};\n            uploadBytes(storageRef, fileBlob, metadata).then(function (snapshot) {\n              getDownloadURL(snapshot.ref).then(function (downloadURL) {\n                var params = {\n                  \"content\": downloadURL,\n                  \"type\": \"voice\",\n                  \"sender\": userID,\n                  \"room\": chatID\n                };\n                console.log('params', params);\n                axios.post(BASE_URL + 'api/createmessage/', params, {\n                  headers: {\n                    'Authorization': \"Token \" + token\n                  }\n                }).then(function _callee6(response) {\n                  return _regeneratorRuntime.async(function _callee6$(_context16) {\n                    while (1) {\n                      switch (_context16.prev = _context16.next) {\n                        case 0:\n                          console.log(\"send Success\", response.data);\n                          _context16.next = 3;\n                          return _regeneratorRuntime.awrap(sentMessageToReader(response.data.id).then(function (r) {\n                            return console.log(r);\n                          }));\n\n                        case 3:\n                        case \"end\":\n                          return _context16.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }).catch(function (err) {\n                  console.log(\"send Success\", err);\n                  alert(\"Send Failed\");\n                });\n              });\n            });\n\n          case 13:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var chooseImage = function chooseImage() {\n    var result, imgName, storageRef, metadata, fileBlob;\n    return _regeneratorRuntime.async(function chooseImage$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaType: \"photo\",\n              selectionLimit: 1,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 0.2,\n              includeBase64: true\n            }));\n\n          case 2:\n            result = _context19.sent;\n            imgName = \"img-\" + new Date().getTime();\n            storageRef = ref(storage, imgName + \".jpg\");\n            console.log(\"uploading file\", imgName);\n            metadata = {\n              contentType: \"image/jpeg,image/png\"\n            };\n            console.log(\"fileBlob...\", result.uri);\n            _context19.next = 10;\n            return _regeneratorRuntime.awrap(getBlobFroUri(result.uri));\n\n          case 10:\n            fileBlob = _context19.sent;\n            uploadBytes(storageRef, fileBlob, metadata).then(function (snapshot) {\n              getDownloadURL(snapshot.ref).then(function (downloadURL) {\n                var params = {\n                  \"content\": downloadURL,\n                  \"type\": \"picture\",\n                  \"sender\": userID,\n                  \"room\": chatID\n                };\n                console.log('params', params);\n                axios.post(BASE_URL + 'api/createmessage/', params, {\n                  headers: {\n                    'Authorization': \"Token \" + token\n                  }\n                }).then(function _callee7(response) {\n                  return _regeneratorRuntime.async(function _callee7$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          console.log(\"send Success\", response.data);\n                          _context18.next = 3;\n                          return _regeneratorRuntime.awrap(sentMessageToReader(response.data.id).then(function (r) {\n                            return console.log(r);\n                          }));\n\n                        case 3:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }).catch(function (err) {\n                  console.log(\"send Success\", err);\n                  alert(\"Send Failed\");\n                });\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#F2F2F2\"\n    },\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.container,\n      keyboardVerticalOffset: 90,\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        children: loading ? _jsxs(_Fragment, {\n          children: [_jsx(ScrollView, {\n            contentContainerStyle: {\n              paddingTop: 15,\n              backgroundColor: '#F2F2F2'\n            },\n            ref: function ref(_ref2) {\n              scrollView = _ref2;\n            },\n            onContentSizeChange: function onContentSizeChange() {\n              return scrollView.scrollToEnd({\n                animated: true\n              });\n            },\n            children: messages.map(function (message) {\n              return message.sender.id === userID ? _jsxs(View, {\n                style: styles.reciever,\n                children: [_jsx(Avatar, {\n                  source: require(\"../assets/young-user-icon.jpg\"),\n                  rounded: true,\n                  containerStyle: {\n                    position: \"absolute\",\n                    bottom: 30,\n                    right: -40\n                  },\n                  size: 30\n                }), message.type === \"text\" ? _jsx(Text, {\n                  style: styles.recieverText,\n                  children: message.content\n                }) : message.type === \"picture\" && message.content ? _jsx(Image, {\n                  style: styles.picture,\n                  source: {\n                    uri: message.content\n                  }\n                }) : message.type === \"voice\" ? _jsx(Button, {\n                  title: \"Play Sound\",\n                  onPress: function onPress() {\n                    playSound(message.content);\n                  }\n                }) : \"\"]\n              }, message.id) : _jsxs(View, {\n                style: styles.sender,\n                children: [_jsx(Avatar, {\n                  source: require(\"../assets/young-user-icon.jpg\"),\n                  rounded: true,\n                  containerStyle: {\n                    position: \"absolute\",\n                    bottom: 30,\n                    left: -40\n                  },\n                  size: 30\n                }), _jsx(Text, {\n                  style: styles.senderName,\n                  children: message.sender.username\n                }), message.type === \"text\" ? _jsx(Text, {\n                  style: styles.senderText,\n                  children: message.content\n                }) : message.type === \"picture\" && message.content ? _jsx(Image, {\n                  style: styles.picture,\n                  source: {\n                    uri: message.content\n                  }\n                }) : message.type === \"voice\" ? _jsx(Button, {\n                  title: \"Play Sound\",\n                  onPress: function onPress() {\n                    playSound(message.content);\n                  }\n                }) : \"\"]\n              }, message.id);\n            })\n          }), _jsxs(View, {\n            style: styles.footer,\n            children: [_jsx(TouchableOpacity, {\n              onPress: clickRecord,\n              activeOpacity: 0.5,\n              children: _jsx(View, {\n                style: styles.micOutline,\n                children: _jsx(Ionicons, {\n                  name: !recording ? \"mic-outline\" : \"mic-off-outline\",\n                  size: 24,\n                  color: \"#66A96B\"\n                })\n              })\n            }), _jsx(TextInput, {\n              placeholder: \"Message\",\n              style: styles.textInput,\n              value: input,\n              onChangeText: function onChangeText(text) {\n                return setInput(text);\n              },\n              onSubmitEditing: sendMessage\n            }), _jsx(TouchableOpacity, {\n              onPress: sendMessage,\n              activeOpacity: 0.5,\n              children: _jsx(Ionicons, {\n                name: \"send\",\n                size: 24,\n                color: \"#66A96B\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: chooseImage,\n              activeOpacity: 0.5,\n              children: _jsx(View, {\n                style: styles.imageOutline,\n                children: _jsx(Ionicons, {\n                  name: \"image-outline\",\n                  size: 24,\n                  color: \"#66A96B\"\n                })\n              })\n            })]\n          })]\n        }) : _jsx(Text, {\n          children: \"loading\"\n        })\n      })\n    })]\n  });\n};\n\nexport default ChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"gray\",\n    borderRadius: 30\n  },\n  imageOutline: {\n    marginLeft: 10\n  },\n  micOutline: {},\n  picture: {\n    width: 150,\n    height: 150\n  },\n  recieverText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10\n  },\n  senderText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#66A96B\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    marginRight: 45,\n    marginLeft: 20,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  sender: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingHorizontal: 15,\n    backgroundColor: \"white\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    marginLeft: 45,\n    marginRight: 20,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"grey\"\n  }\n});","map":{"version":3,"sources":["C:/Users/sanli/Desktop/backup/wai-chat-master(1)/screens/ChatScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","useRef","BASE_URL","Avatar","ListItem","AntDesign","ImagePicker","Audio","initializeApp","getStorage","ref","uploadBytes","getDownloadURL","FontAwesome","Ionicons","axios","SecureStore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","storage","scrollView","ChatScreen","navigation","route","input","setInput","loading","setLoading","messages","setMessages","params","chatID","chatName","token","userID","phoneNumber","hasPhoneNumber","sethasPhoneNumber","recording","setRecording","isRecording","setIsRecording","sound","setSound","getMessages","token1","get","headers","then","response","data","catch","error","console","log","sentMessageToReader","messageID","chatters","i","length","chatter","setToUnread","sentNotification","chatterID","post","err","alert","setToRead","unReadMessageID","url","patch","r","clearUnread","userid","unReadMessages","id","ms","ms1","phonecall","Linking","openURL","chatDetail","navigate","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","headerBackTitleVisible","headerTitleAlign","headerTitle","flexDirection","alignItems","require","marginLeft","fontWeight","headerLeft","goBack","headerRight","justifyContent","width","marginRight","sendMessage","Keyboard","dismiss","getBlobFroUri","uri","Promise","resolve","reject","xhr","XMLHttpRequest","onload","onerror","e","TypeError","responseType","open","send","blob","clickRecord","isr","startRecording","stopRecording","playSound","Sound","createAsync","playAsync","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","undefined","stopAndUnloadAsync","getURI","fileBlob","filName","Date","getTime","storageRef","metadata","snapshot","downloadURL","chooseImage","launchImageLibraryAsync","mediaType","selectionLimit","allowsEditing","aspect","quality","includeBase64","result","imgName","contentType","flex","Platform","OS","styles","container","paddingTop","scrollToEnd","animated","map","message","sender","reciever","position","bottom","right","type","recieverText","content","picture","left","senderName","username","senderText","footer","micOutline","textInput","text","imageOutline","StyleSheet","create","padding","height","borderColor","borderRadius","marginBottom","alignSelf","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","paddingBottom","paddingHorizontal","paddingRight","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\n//import { GiftedChat } from 'react-native-gifted-chat'\nimport { BASE_URL } from \"../constants\";\nimport {\n  StyleSheet,\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n  Button,\n  Platform, ScrollView, TextInput, Keyboard, TouchableWithoutFeedback, Linking,\n  Image\n} from 'react-native';\nimport { Avatar, ListItem } from \"react-native-elements\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Audio } from 'expo-av';\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\n\n// import {AudioRecorder, AudioUtils} from 'react-native-audio';\n\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBKutAIM8JNqz5vRhOqNEcseptvDOk7Kpw\",\n  authDomain: \"entarome-15d8a.firebaseapp.com\",\n  projectId: \"entarome-15d8a\",\n  storageBucket: \"entarome-15d8a.appspot.com\",\n  messagingSenderId: \"779364504573\",\n  appId: \"1:779364504573:web:4c76e66828cfbcc8b2ff94\",\n  measurementId: \"G-E8LDCESXK3\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst storage = getStorage(firebaseApp);\n\nlet scrollView;\nconst ChatScreen = ({ navigation, route }) => {\n  // const BASE_URL = 'https://wai-chat-api.herokuapp.com/';\n\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n  const { chatID, chatName, token, userID, phoneNumber } = route.params;\n  const [hasPhoneNumber, sethasPhoneNumber] = useState(false);\n  const [recording, setRecording] = useState();\n  const [isRecording, setIsRecording] = useState(false);\n\n  const [sound, setSound] = React.useState();\n\n  const getMessages = async (token1) => {\n    await axios.get(BASE_URL + 'api/messagebyroom/?room=' + chatID, {\n      headers: {\n        'Authorization': `Token ` + token1\n      }\n    }).then(function (response) {\n      // handle success\n      setMessages(response.data);\n    }).catch(function (error) {\n      // handle error\n      console.log(\"no token\");\n      console.log(error);\n      // navigation.navigate(\"login\");\n    });\n  }\n\n  const sentMessageToReader = async (messageID) => {\n    axios.get(BASE_URL + 'api/chatroom/' + chatID, {\n      headers: {\n        'Authorization': `Token ` + token\n      }\n    }).then(async function (response) {\n      // handle success\n      const chatters = response.data.chatters;\n      let i = 0;\n      while (i < chatters.length) {\n        let chatter = chatters[i];\n        if (chatter != userID) {\n          console.log(chatter);\n          await setToUnread(chatter, messageID);\n        }\n        i = i + 1;\n      }\n    }).catch(function (error) {\n      // handle error\n      console.log(\"no token\");\n    });\n  }\n\n  const sentNotification = async (chatterID, messageID) => {\n    axios.post(BASE_URL + 'api/sendNotification/',\n      {\n        \"userID\": chatterID,\n        \"messageID\": messageID\n      }).then(async (response) => {\n        // console.log(response.data.token);\n        console.log(\"set success\");\n      }).catch(err => console.log(\"sent failed\"))\n  }\n\n  const setToUnread = async (chatterID, messageID) => {\n    await sentNotification(chatterID, messageID);\n    axios.post(BASE_URL + 'api/messagereader/',\n      {\n        \"read\": false,\n        \"message\": messageID,\n        \"reader\": chatterID,\n        \"room\": chatID\n      }).then(async (response) => {\n        // console.log(response.data.token);\n        console.log(\"set success\");\n      }).catch(err => alert(\"set failed\"))\n  }\n\n  const setToRead = async (unReadMessageID, token1) => {\n    let url = BASE_URL + \"api/messagereader/\" + unReadMessageID + \"/\";\n    console.log(url);\n    axios.patch(url, {\n      \"read\": true\n    }, {\n      headers: {\n        'Authorization': `Token ` + token1\n      }\n    }\n    ).then(r => console.log(r.data)).catch(error => console.log(error))\n  }\n\n  const clearUnread = async (chatID, userid, token1) => {\n    await axios.get(BASE_URL + 'api/messagereader/?read=false&reader=' + userid + '&room=' + chatID, {\n      headers: {\n        'Authorization': `Token ` + token1\n      }\n    }).then(function (response) {\n      // handle success\n      let unReadMessages = response.data;\n      let i = 0;\n      while (i < unReadMessages.length) {\n        let unReadMessageID = unReadMessages[i].id;\n        setToRead(unReadMessageID, token1)\n        i = i + 1;\n      }\n    }).catch(function (error) {\n      // handle error\n      console.log(\"no token\");\n      console.log(error);\n      // navigation.navigate(\"login\");\n    });\n  }\n\n  useEffect(() => {\n    if (phoneNumber !== \"\") {\n      sethasPhoneNumber(true);\n    }\n    (async () => {\n      try {\n        // const token1 = await getMyToken();\n        const ms = getMessages(token)\n        const ms1 = clearUnread(chatID, userID, token)\n        if (messages === \"\") {\n          setLoading(false);\n        } else {\n          setLoading(true);\n          console.log(chatID);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })()\n  }, [messages, chatID])\n\n  const phonecall = () => {\n    Linking.openURL('tel:' + phoneNumber);\n  }\n\n  const chatDetail = () => {\n    navigation.navigate(\"chatDetail\", {\n      chatID: chatID,\n      chatName: chatName,\n      token: token,\n      userID: userID,\n      phoneNumber: phoneNumber,\n    })\n  }\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerStyle: { backgroundColor: \"#3B5F41\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"black\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: () => (\n        <View style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}>\n          <Avatar\n            rounded\n            source={require(\"../assets/young-user-icon.jpg\")}\n          />\n          <Text style={{\n            color: \"white\",\n            marginLeft: 10,\n            fontWeight: \"700\"\n          }}>\n            {chatName}\n          </Text>\n        </View>\n      ),\n      headerLeft: () => (\n        <TouchableOpacity style={{\n          marginLeft: 10,\n        }} onPress={navigation.goBack}>\n          <AntDesign name={\"arrowleft\"} size={24} color={'white'} />\n        </TouchableOpacity>\n      ),\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20\n          }}\n        >\n          <TouchableOpacity>\n            <FontAwesome name={\"video-camera\"} size={24} color={\"white\"} />\n          </TouchableOpacity>\n          {hasPhoneNumber ?\n            <TouchableOpacity onPress={phonecall}>\n              <Ionicons name={\"call\"} size={24} color={\"white\"} />\n            </TouchableOpacity>\n            : null\n          }\n          <TouchableOpacity onPress={chatDetail}>\n            <Ionicons name={\"ellipsis-horizontal-outline\"} size={24} color={\"white\"} />\n          </TouchableOpacity>\n        </View>\n      )\n    })\n  }, [messages]);\n\n\n  const sendMessage = () => {\n    Keyboard.dismiss();\n    if (input === \"\") {\n      alert(\"Please enter a message\");\n    } else {\n      // create message\n      axios.post(BASE_URL + 'api/createmessage/',\n        {\n          \"content\": input,\n          \"type\": \"text\",\n          \"sender\": userID,\n          \"room\": chatID\n        }, {\n        headers: {\n          'Authorization': `Token ` + token\n        }\n      },\n      ).then(async response => {\n        console.log(response.data);\n        await sentMessageToReader(response.data.id).then(r => console.log(r));\n      }).catch(err => alert(\"Send Failed\"))\n      // find other users\n    }\n    setInput('')\n  };\n\n  const getBlobFroUri = async (uri) => {\n    const blob = await new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function (e) {\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open(\"GET\", uri, true);\n      xhr.send(null);\n    });\n\n    return blob;\n  };\n\n\n  const clickRecord = async () => {\n    let isr = !isRecording;\n    setIsRecording(isr);\n    if (isr) {\n      startRecording();\n    } else {\n      stopRecording();\n    }\n  }\n\n  async function playSound(url) {\n    console.log('Loading Sound');\n    const { sound } = await Audio.Sound.createAsync({ uri: url});\n    setSound(sound);\n\n    console.log('Playing Sound');\n    await sound.playAsync();\n  }\n\n  const startRecording = async () => {\n    try {\n      console.log('Requesting permissions..');\n      await Audio.requestPermissionsAsync();\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true,\n      });\n      console.log('Starting recording..');\n      const { recording } = await Audio.Recording.createAsync(\n        Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n      );\n      setRecording(recording);\n      console.log('Recording started');\n    } catch (err) {\n      console.error('Failed to start recording', err);\n    }\n  }\n  const stopRecording = async () => {\n    console.log('Stopping recording..');\n    setRecording(undefined);\n    await recording.stopAndUnloadAsync();\n    const uri = recording.getURI();\n    console.log('Recording stopped and stored at', uri);\n\n    let fileBlob = await getBlobFroUri(uri);\n    const filName = \"audio-\" + new Date().getTime();\n\n    const storageRef = ref(storage, `${filName}`);\n\n    const metadata = {\n      // contentType: \"image/jpeg,image/png\",\n    };\n\n    uploadBytes(storageRef, fileBlob, metadata).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((downloadURL) => {\n\n        let params = {\n          \"content\": downloadURL,\n          \"type\": \"voice\",\n          \"sender\": userID,\n          \"room\": chatID\n        };\n        console.log('params', params);\n        axios.post(BASE_URL + 'api/createmessage/',\n          params, {\n          headers: {\n            'Authorization': `Token ` + token\n          }\n        },\n        ).then(async response => {\n          console.log(\"send Success\", response.data);\n          await sentMessageToReader(response.data.id).then(r => console.log(r));\n        }).catch(err => {\n          console.log(\"send Success\", err);\n          alert(\"Send Failed\")\n        })\n\n\n      });\n\n    });\n\n  }\n\n\n\n  const chooseImage = async () => {\n\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaType: \"photo\", // 'photo' or 'video' or 'mixed'\n      selectionLimit: 1,// 1为一张，0不限制数量\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.2,\n      includeBase64: true\n    });\n\n    const imgName = \"img-\" + new Date().getTime();\n\n    const storageRef = ref(storage, `${imgName}.jpg`);\n\n    console.log(\"uploading file\", imgName);\n\n    // Create file metadata including the content type\n    const metadata = {\n      contentType: \"image/jpeg,image/png\",\n    };\n\n    console.log(\"fileBlob...\", result.uri);\n    let fileBlob = await getBlobFroUri(result.uri);\n    \n\n    uploadBytes(storageRef, fileBlob, metadata).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((downloadURL) => {\n\n        let params = {\n          \"content\": downloadURL,\n          \"type\": \"picture\",\n          \"sender\": userID,\n          \"room\": chatID\n        };\n        console.log('params', params);\n        axios.post(BASE_URL + 'api/createmessage/',\n          params, {\n          headers: {\n            'Authorization': `Token ` + token\n          }\n        },\n        ).then(async response => {\n          console.log(\"send Success\", response.data);\n          await sentMessageToReader(response.data.id).then(r => console.log(r));\n        }).catch(err => {\n          console.log(\"send Success\", err);\n          alert(\"Send Failed\")\n        })\n\n\n      });\n\n    });\n\n  };\n\n\n  return (\n\n    <SafeAreaView style={{\n      flex: 1,\n      backgroundColor: \"#F2F2F2\"\n    }}>\n      <StatusBar style={\"light\"} />\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n        keyboardVerticalOffset={90}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          {loading ?\n            <>\n              <ScrollView\n                contentContainerStyle={{ paddingTop: 15, backgroundColor: '#F2F2F2' }}\n                //自动到最下\n                ref={ref => {\n                  scrollView = ref\n                }}\n                onContentSizeChange={() => scrollView.scrollToEnd({ animated: true })}>\n\n                {messages.map((message) => (\n                  message.sender.id === userID ? (\n                    //收\n                    <View key={message.id} style={styles.reciever}>\n                      <Avatar\n                        source={require(\"../assets/young-user-icon.jpg\")}\n                        rounded\n                        //Web\n                        containerStyle={{\n                          position: \"absolute\",\n                          bottom: 30,\n                          right: -40,\n                        }}\n                        size={30}\n                      />\n                      {message.type === \"text\" ? (<Text style={styles.recieverText}>{message.content}</Text>) : (message.type === \"picture\" && message.content ? <Image style={styles.picture} source={{ uri: message.content }}></Image> : (message.type === \"voice\" ?  <Button title=\"Play Sound\" onPress={()=>{\n                        playSound(message.content)\n                      }} /> : \"\"))}\n\n                    </View>\n                  ) : (\n                    //发\n                    <View key={message.id} style={styles.sender}>\n                      <Avatar\n                        source={require(\"../assets/young-user-icon.jpg\")}\n                        rounded\n                        //Web\n                        containerStyle={{\n                          position: \"absolute\",\n                          bottom: 30,\n                          left: -40,\n                        }}\n                        size={30}\n                      />\n                      <Text style={styles.senderName}>{message.sender.username}</Text>\n\n                      {message.type === \"text\" ? (<Text style={styles.senderText}>{message.content}</Text>) : (message.type === \"picture\" && message.content ? <Image style={styles.picture} source={{ uri: message.content }}></Image> : (message.type === \"voice\" ?  <Button title=\"Play Sound\" onPress={()=>{\n                        playSound(message.content)\n                      }} /> : \"\"))}\n                    </View>\n                  )\n                ))}\n              </ScrollView>\n              <View style={styles.footer}>\n                <TouchableOpacity onPress={clickRecord} activeOpacity={0.5}>\n                  <View style={styles.micOutline}>\n                    <Ionicons name={!recording ? \"mic-outline\" : \"mic-off-outline\"} size={24} color={\"#66A96B\"} />\n                  </View>\n                </TouchableOpacity>\n                <TextInput\n                  placeholder={\"Message\"}\n                  style={styles.textInput}\n                  value={input}\n                  onChangeText={(text) => setInput(text)}\n                  onSubmitEditing={sendMessage}\n                />\n                <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                  <Ionicons name={\"send\"} size={24} color={\"#66A96B\"} />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={chooseImage} activeOpacity={0.5}>\n                  <View style={styles.imageOutline}>\n                    <Ionicons name={\"image-outline\"} size={24} color={\"#66A96B\"} />\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </>\n            : <Text>loading</Text>}\n\n        </TouchableWithoutFeedback>\n\n\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n\n  );\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    // borderWidth:1,\n    padding: 10,\n    color: \"gray\",\n    borderRadius: 30,\n  },\n  imageOutline: {\n    marginLeft: 10\n  },\n  micOutline: {\n\n  },\n  picture: {\n    width: 150,\n    height: 150\n  },\n  recieverText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n  },\n  senderText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#66A96B\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    marginRight: 45,\n    marginLeft: 20,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  sender: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingHorizontal: 15,\n    backgroundColor: \"white\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    marginLeft: 45,\n    marginRight: 20,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"grey\",\n  }\n})"]},"metadata":{},"sourceType":"module"}
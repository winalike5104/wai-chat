{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Header, ListItem } from 'react-native-elements';\nimport CustomListItem from \"../components/CustomListItem\";\nimport { Avatar } from \"react-native-elements\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios';\nimport { BASE_URL } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserListScreen = function UserListScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      token1 = _route$params.token1,\n      userID = _route$params.userID;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var getUsers = function getUsers() {\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL + 'api/showAllUsers/', {}).then(function (response) {\n              setUsers(response.data.user);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var list;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getUsers(token1));\n\n            case 3:\n              list = _context2.sent;\n\n              if (users.length === 0) {\n                setLoading(false);\n              } else {\n                setLoading(true);\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    })();\n  }, [users]);\n\n  var openUserList = function openUserList(token, userid) {\n    navigation.navigate(\"userList\", {\n      token: token1,\n      userID: userid\n    });\n  };\n\n  var openHome = function openHome(token) {\n    navigation.navigate(\"home\", {\n      token: token1\n    });\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"User\",\n      headerStyle: {\n        backgroundColor: \"#3B5F41\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"black\",\n      headerLeft: function headerLeft() {\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            children: _jsx(Avatar, {\n              rounded: true,\n              source: require(\"../assets/young-user-icon.jpg\"),\n              size: 40\n            })\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20\n          },\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            children: _jsx(AntDesign, {\n              name: \"camerao\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        });\n      }\n    });\n  }, [users]);\n\n  var match = function match(userID, matchID) {\n    if (userID == matchID) {\n      alert(\"You cannot create a chat room with yourself\");\n    } else {\n      axios.post(BASE_URL + 'api/createChatRoom/', {\n        type: 'onetoone',\n        creater: userID,\n        chatters: [userID, matchID]\n      }).then(function _callee2(response) {\n        return _regeneratorRuntime.async(function _callee2$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                navigation.navigate(\"chat\", {\n                  chatID: response.data.chatRoomID,\n                  chatName: response.data.chatRoomName,\n                  token: token1,\n                  userID: userID\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  };\n\n  var searchUser = function searchUser(textToSearch) {\n    alert(textToSearch);\n    setInput(textToSearch);\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(View, {\n      style: styles.searchBar,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Search User\",\n        onChangeText: function onChangeText(text) {\n          return searchUser(text);\n        },\n        value: input\n      })\n    }), _jsx(ScrollView, {\n      style: styles.container,\n      children: loading ? [users.map(function (user) {\n        return userID != user.id ? _jsxs(ListItem, {\n          Component: TouchableOpacity,\n          title: user.first_name + ' ' + user.last_name,\n          onPress: function onPress() {\n            match(userID, user.id);\n          },\n          bottomDivider: true,\n          chevron: true,\n          children: [_jsx(Avatar, {\n            rounded: true,\n            source: require(\"../assets/young-user-icon.jpg\")\n          }), _jsx(ListItem.Content, {\n            children: _jsx(ListItem.Title, {\n              style: {\n                fontWeight: \"800\"\n              },\n              children: user.first_name + ' ' + user.last_name\n            })\n          })]\n        }, user.id) : null;\n      })] : _jsx(Text, {\n        children: \"Loading\"\n      })\n    }), _jsxs(View, {\n      style: styles.bottomBar,\n      children: [_jsx(View, {\n        style: styles.BottomMenu1,\n        children: _jsx(TouchableOpacity, {\n          activeOpacity: 0.5,\n          style: styles.button,\n          onPress: function onPress() {\n            openHome(token1);\n          },\n          children: _jsx(SimpleLineIcons, {\n            name: \"bubble\",\n            size: 30,\n            color: \"#66A96B\",\n            marginTop: 10\n          })\n        })\n      }), _jsx(View, {\n        style: styles.BottomMenu1,\n        children: _jsx(TouchableOpacity, {\n          activeOpacity: 0.5,\n          style: styles.button,\n          onPress: function onPress() {\n            openUserList(token1, userID);\n          },\n          children: _jsx(SimpleLineIcons, {\n            name: \"people\",\n            size: 30,\n            color: \"#66A96B\",\n            marginTop: 10\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default UserListScreen;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%'\n  },\n  searchBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 5\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"gray\",\n    borderRadius: 30\n  },\n  bottomBar: {\n    backgroundColor: 'yellow',\n    width: '100%',\n    height: '25%',\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  BottomMenu1: {\n    backgroundColor: '#DDDDDD',\n    width: '50%',\n    height: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/sanli/Desktop/backup/wai-chat-master(1)/screens/UserListScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","Header","ListItem","CustomListItem","Avatar","AntDesign","SimpleLineIcons","SecureStore","axios","BASE_URL","UserListScreen","navigation","route","params","token1","userID","users","setUsers","input","setInput","loading","setLoading","getUsers","get","then","response","data","user","catch","error","console","log","list","length","openUserList","token","userid","navigate","openHome","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","require","headerRight","flexDirection","justifyContent","width","marginRight","match","matchID","alert","post","type","creater","chatters","chatID","chatRoomID","chatName","chatRoomName","searchUser","textToSearch","styles","searchBar","textInput","text","container","map","id","TouchableOpacity","first_name","last_name","fontWeight","bottomBar","BottomMenu1","button","StyleSheet","create","height","alignItems","padding","bottom","flex","borderColor","borderRadius","flexWrap"],"mappings":"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","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from 'react';\r\n\r\nimport {SafeAreaView, ScrollView, Text, View, TextInput, Keyboard,TouchableOpacity, StyleSheet} from 'react-native';\r\nimport {Header, ListItem} from 'react-native-elements'\r\n\r\nimport CustomListItem from \"../components/CustomListItem\";\r\nimport {Avatar} from \"react-native-elements\";\r\nimport {AntDesign, SimpleLineIcons} from \"@expo/vector-icons\";\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport axios from 'axios';\r\n\r\n// const BASE_URL = 'https://wai-chat-api.herokuapp.com/';\r\nimport {BASE_URL} from \"../constants\";\r\n\r\nconst UserListScreen = ({navigation, route}) => {\r\n    const {token1, userID} = route.params;\r\n    //console.log(token1)\r\n    //console.log(userID)\r\n    const [users, setUsers] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    // const [userid, setUserID] = useState(\"\");\r\n    // const [first_name, setFirst_name] = useState(\"\");\r\n    // const [last_name, setLast_name] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    const getUsers = async () => {\r\n        await axios.get(BASE_URL + 'api/showAllUsers/', {}).then(function (response) {\r\n            // handle success\r\n            //console.log(response.data.user);\r\n            //console.log(token1)\r\n            setUsers(response.data.user);\r\n            // console.log(response.data.user)\r\n            //console.log(response.data.user[1]);\r\n        }).catch(function (error) {\r\n            // handle error\r\n            //console.log(\"get rooms no token\");\r\n            console.log(error);\r\n            // SecureStore.deleteItemAsync(\"myToken\");\r\n            // navigation.navigate(\"login\");\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Add inner async function\r\n        (async () => {\r\n            // console.log(\"token:\"+token);\r\n            try {\r\n                // const token1 = await getMyToken();\r\n                const list = await getUsers(token1);\r\n                // console.log(\"lastname: \"+last_name);\r\n                if (users.length === 0) {\r\n                    setLoading(false);\r\n                } else {\r\n                    setLoading(true);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })()\r\n    }, [users])\r\n\r\n\r\n\r\n    const openUserList = (token, userid) => {\r\n        navigation.navigate(\"userList\", {\r\n            token: token1,\r\n            userID: userid,\r\n        })\r\n    }\r\n\r\n    const openHome = (token) => {\r\n        navigation.navigate(\"home\", {\r\n            token: token1,\r\n        })\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"User\",\r\n            headerStyle: {backgroundColor: \"#3B5F41\"},\r\n            headerTitleStyle: {color: \"white\"},\r\n            headerTintColor: \"black\",\r\n            headerLeft: () => (\r\n                <View style={{marginLeft: 20}}>\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <Avatar\r\n                            rounded\r\n                            source={require(\"../assets/young-user-icon.jpg\")} size={40}\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <View style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: 80,\r\n                    marginRight: 20,\r\n                }}\r\n                >\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <AntDesign name={\"camerao\"} size={24} color={\"white\"}/>\r\n                    </TouchableOpacity>\r\n                    {/* <TouchableOpacity\r\n                        activeOpacity={0.5}\r\n                        // onPress={()=>navigation.navigate(\"addChat\")}\r\n                        onPress={() => getMyToken()}\r\n                    >\r\n                        <SimpleLineIcons name={\"pencil\"} size={24} color={\"white\"}/>\r\n                    </TouchableOpacity> */}\r\n                </View>\r\n            ),\r\n\r\n        });\r\n    }, [users]);\r\n\r\n    const match = (userID, matchID) => {\r\n        if (userID == matchID) {\r\n            alert(\"You cannot create a chat room with yourself\");\r\n        } else {\r\n            axios.post(BASE_URL + 'api/createChatRoom/',\r\n                {\r\n                    type: 'onetoone',\r\n                    creater: userID,\r\n                    chatters: [userID, matchID]\r\n                }).then(async (response) => {\r\n                navigation.navigate(\"chat\", {\r\n                    chatID: response.data.chatRoomID,\r\n                    chatName: response.data.chatRoomName,//chat room name\r\n                    token: token1,\r\n                    userID: userID,\r\n                })\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const searchUser = (textToSearch) => {\r\n        alert(textToSearch)\r\n        setInput(textToSearch)\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n        <SafeAreaView>\r\n            <View style={styles.searchBar}>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Search User\"\r\n                    onChangeText={text => searchUser(text)}\r\n                    value={input}\r\n                    //onSubmitEditing={sendMessage}\r\n                />\r\n            </View>\r\n            <ScrollView style={styles.container}>\r\n                {loading ?\r\n                    [\r\n                        users.map((user) => (\r\n                            // console.log(userID,user.id)\r\n                            userID != user.id ?\r\n                                <ListItem\r\n                                    Component={TouchableOpacity}\r\n                                    key={user.id}\r\n                                    title={user.first_name + ' ' + user.last_name}\r\n                                    //leftIcon={{ name: item.icon }}\r\n                                    onPress={() => {\r\n                                        match(userID, user.id)\r\n                                    }}\r\n\r\n                                    bottomDivider\r\n                                    chevron\r\n                                >\r\n                                    <Avatar\r\n                                        rounded\r\n                                        source={require(\"../assets/young-user-icon.jpg\")}\r\n\r\n                                    />\r\n                                    <ListItem.Content>\r\n                                        <ListItem.Title style={{fontWeight: \"800\"}}>\r\n                                            {user.first_name + ' ' + user.last_name}\r\n                                        </ListItem.Title>\r\n                                    </ListItem.Content>\r\n                                </ListItem> : null\r\n\r\n\r\n                        ))]\r\n                    :\r\n                    <Text>Loading</Text>\r\n                }\r\n\r\n\r\n            </ScrollView>\r\n            <View style={styles.bottomBar}>\r\n                <View\r\n                    style={styles.BottomMenu1}>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.5}\r\n                        style={styles.button}\r\n                        onPress={() => {\r\n                            openHome(token1)\r\n                        }}\r\n                    >\r\n                        <SimpleLineIcons name={\"bubble\"} size={30} color={\"#66A96B\"} marginTop={10}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View\r\n                    style={styles.BottomMenu1}>\r\n                    <TouchableOpacity\r\n                        activeOpacity={0.5}\r\n                        style={styles.button}\r\n                        onPress={() => {\r\n                            openUserList(token1, userID)\r\n                        }}\r\n                    >\r\n                        <SimpleLineIcons name={\"people\"} size={30} color={\"#66A96B\"} marginTop={10}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n            </View>\r\n\r\n\r\n        </SafeAreaView>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n        height: '100%',\r\n    },\r\n\r\n    searchBar: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: 5,\r\n    },\r\n\r\n    textInput: {\r\n        bottom: 0,\r\n        height: 40,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        borderColor: \"transparent\",\r\n        backgroundColor: \"#ECECEC\",\r\n        // borderWidth:1,\r\n        padding: 10,\r\n        color: \"gray\",\r\n        borderRadius: 30,\r\n    },\r\n\r\n    bottomBar: {\r\n        backgroundColor: 'yellow',\r\n        width: '100%',\r\n        height: '25%',\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n\r\n    },\r\n    button: {\r\n        alignItems: \"center\",\r\n        justifyContent: 'space-around',\r\n        padding: 10\r\n    },\r\n\r\n    BottomMenu1: {\r\n        backgroundColor: '#DDDDDD',\r\n        width: '50%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}